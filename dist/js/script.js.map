{"version":3,"sources":["script.js"],"names":["hamburger","document","querySelector","navMenu","navLinks","querySelectorAll","navigationBar","body","topBtn","classList","toggle","toggleFn","innerWidth","contains","scrollProgressBar","progressPercentage","getBoundingClientRect","top","Math","floor","height","style","documentElement","clientHeight","progressBar","width","abs","val","percentage","addEventListener","ua","forEach","link","scrollFromTop","e","window","onscroll","scrollTop","add","remove","indexOf","navigator","userAgent","toLowerCase","slideInUpAnim","$","on","animate","this","hash","offset","zIndex","timeline","stagger","gsap","to","opacity","defaults","duration","from","entry","isIntersecting","target","x","observer","callback","play","action","root","Array","menu","paused","item","y","delay","scale","prototype","call","el","Swiper","slidesPerView","navigation","nextEl","prevEl","breakpoints","scaleIn","spaceBetween","0","1025","1400"],"mappings":"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","file":"script.js","sourcesContent":["const hamburger = document.querySelector('.navigation__toggler');\r\nconst navMenu = document.querySelector('.navigation__menu');\r\nconst navLinks = document.querySelectorAll('.navigation__menu-link');\r\nconst navigationBar = document.querySelector('.navigation');\r\nconst body = document.querySelector('body');\r\nconst progressBar = document.querySelector('.progress-bar');\r\nconst topBtn = document.querySelector('.go-to-top-btn');\r\n\r\nconst toggleFn = () => {\r\n    navMenu.classList.toggle('navigation__menu--show');\r\n    hamburger.classList.toggle('navigation__toggler--toggle');\r\n\r\n    const innerWidth = window.innerWidth;\r\n\r\n    if (innerWidth < 768) {\r\n        body.classList.toggle('prevent-scroll');\r\n\r\n        if (!navigationBar.classList.contains('navigation--scrolled')) {\r\n            navigationBar.classList.toggle('navigation--green-bg');\r\n        }\r\n    }\r\n};\r\n\r\nconst scrollProgressBar = () => {\r\n    let scrollDistance = body.getBoundingClientRect().top;\r\n\r\n    let progressPercentage =\r\n        (scrollDistance /\r\n            (body.getBoundingClientRect().height -\r\n                document.documentElement.clientHeight)) *\r\n        100;\r\n\r\n    const percentage = Math.abs(progressPercentage);\r\n\r\n    let val = Math.floor(percentage);\r\n    progressBar.style.width = val + '%';\r\n\r\n    if (val === 0) {\r\n        progressBar.style.width = '0%';\r\n    }\r\n};\r\n\r\nwindow.addEventListener('scroll', scrollProgressBar);\r\n\r\nhamburger.addEventListener('click', () => {\r\n    toggleFn();\r\n});\r\n\r\nnavLinks.forEach((link) => {\r\n    link.addEventListener('click', (e) => {\r\n        toggleFn();\r\n    });\r\n});\r\n\r\n//Check window offset from top to toggle header classes\r\nwindow.onscroll = () => {\r\n    const scrollFromTop = document.documentElement.scrollTop;\r\n\r\n    if (scrollFromTop > 0) {\r\n        navigationBar.classList.add('navigation--scrolled');\r\n        topBtn.classList.add('go-to-top-btn--show');\r\n    } else {\r\n        navigationBar.classList.remove('navigation--scrolled');\r\n        topBtn.classList.remove('go-to-top-btn--show');\r\n    }\r\n\r\n    return scrollFromTop;\r\n};\r\n\r\n// Smooth scroll for Safari browsers\r\nconst ua = navigator.userAgent.toLowerCase();\r\nif (ua.indexOf('safari') != -1) {\r\n    if (ua.indexOf('chrome') > -1) {\r\n        $('.navigation__menu-link, .smooth-scroll, .btn').on(\r\n            'click',\r\n            function (e) {\r\n                if (this.hash !== '') {\r\n                    const hash = this.hash;\r\n\r\n                    $('html, body').animate(\r\n                        {\r\n                            scrollTop: $(hash).offset().top,\r\n                        },\r\n                        800\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    } else {\r\n        $(' .navigation__menu-link, .smooth-scroll, .btn').on(\r\n            'click',\r\n            function (e) {\r\n                if (this.hash !== '') {\r\n                    const hash = this.hash;\r\n                    $('html, body').animate(\r\n                        {\r\n                            scrollTop: $(hash).offset().top,\r\n                        },\r\n                        800\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\n//Animations\r\nwindow.addEventListener('load', () => {\r\n    gsap.to('.preloader', { opacity: 0, zIndex: -10 });\r\n    const timeline = gsap.timeline({ defaults: { duration: 0.5 } });\r\n    timeline\r\n\r\n        .from('.navigation__logo', {\r\n            x: -30,\r\n            opacity: 0,\r\n        })\r\n        .from('.navigation__hamburger', {\r\n            x: 30,\r\n            opacity: 0,\r\n        })\r\n        .from('.landing__heading-btn', { y: 50, opacity: 0 })\r\n        .from('.navigation__menu-link', { opacity: 0, stagger: 0.2 });\r\n});\r\n\r\n//Callback function for target\r\nconst callback = function (entries) {\r\n    entries.forEach(function (entry) {\r\n        if (entry.isIntersecting) {\r\n            entry.target.timeline.play();\r\n        }\r\n    });\r\n};\r\n\r\n//Intersection observer\r\n\r\nconst observer = new IntersectionObserver(callback, {\r\n    root: null,\r\n    threshold: 0.3,\r\n});\r\n\r\n///SlideInUp Animation\r\n\r\nconst slideInUpAnim = document.querySelectorAll('.slideInUp');\r\nslideInUpAnim.forEach(function (item) {\r\n    const action = gsap\r\n        .timeline({ paused: true })\r\n        .from(item, { y: 40, opacity: 0, duration: 0.6, delay: 0.5 });\r\n\r\n    item.timeline = action;\r\n});\r\n\r\nArray.prototype.forEach.call(slideInUpAnim, (el) => {\r\n    observer.observe(el);\r\n});\r\n\r\nconst scaleIn = document.querySelectorAll('.scaleIn');\r\nscaleIn.forEach(function (item) {\r\n    const action = gsap\r\n        .timeline({ paused: true })\r\n        .from(item, { opacity: 0, duration: 0.8, delay: 0.5, scale: 0.8 });\r\n    item.timeline = action;\r\n});\r\nArray.prototype.forEach.call(scaleIn, (el) => {\r\n    observer.observe(el);\r\n});\r\n\r\nconst menu = new Swiper('.pricelist-swiper', {\r\n    navigation: {\r\n        nextEl: '.swiper-button-next',\r\n        prevEl: '.swiper-button-prev',\r\n    },\r\n    breakpoints: {\r\n        0: {\r\n            slidesPerView: 1,\r\n            spaceBetween: 20,\r\n        },\r\n        1025: {\r\n            slidesPerView: 2,\r\n            spaceBetween: 20,\r\n        },\r\n\r\n        1400: {\r\n            slidesPerView: 3,\r\n            spaceBetween: 20,\r\n        },\r\n    },\r\n});\r\n"]}